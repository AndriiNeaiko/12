package com.example.lab_2;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.graphics.Color;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import java.util.Random;

public class MainActivity extends AppCompatActivity {

    private TextView colorNameTextView, scoreTextView, timerTextView;
    private Button matchButton, notMatchButton;
    private int score = 0;
    private int correctAnswers = 0;
    private int incorrectAnswers = 0;

    // Додаємо більше кольорів
    private String[] colors = {"Червоний", "Зелений", "Синій", "Жовтий", "Оранжевий", "Фіолетовий", "Рожевий", "Коричневий", "Сірий"};
    private int[] colorValues = {Color.RED, Color.GREEN, Color.BLUE, Color.YELLOW, Color.parseColor("#FFA500"), Color.MAGENTA, Color.parseColor("#FFC0CB"), Color.parseColor("#8B4513"), Color.GRAY};

    private CountDownTimer timer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        colorNameTextView = findViewById(R.id.colorNameTextView);
        scoreTextView = findViewById(R.id.scoreTextView);
        timerTextView = findViewById(R.id.timerTextView);
        matchButton = findViewById(R.id.matchButton);
        notMatchButton = findViewById(R.id.notMatchButton);

        startGameTimer();

        generateNewColor();

        matchButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                checkMatch(true);
            }
        });

        notMatchButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                checkMatch(false);
            }
        });
    }

    private void startGameTimer() {
        timer = new CountDownTimer(180000, 1000) { // 3 хвилини в мілісекундах

            @Override
            public void onTick(long millisUntilFinished) {
                int minutes = (int) (millisUntilFinished / 1000) / 60;
                int seconds = (int) (millisUntilFinished / 1000) % 60;
                timerTextView.setText(String.format("Час: %02d:%02d", minutes, seconds));
            }

            @Override
            public void onFinish() {
                showResultsDialog();
            }
        }.start();
    }

    private void generateNewColor() {
        Random random = new Random();
        int textColorIndex = random.nextInt(colors.length);
        int colorNameIndex = random.nextInt(colors.length);

        colorNameTextView.setText(colors[colorNameIndex]);
        colorNameTextView.setTextColor(colorValues[textColorIndex]);
    }

    private void checkMatch(boolean isMatchSelected) {
        String colorName = colorNameTextView.getText().toString();
        int colorValue = colorNameTextView.getCurrentTextColor();

        boolean isMatch = colorValue == getColorByName(colorName);

        if (isMatch == isMatchSelected) {
            score++;
            correctAnswers++;
        } else {
            score--;
            incorrectAnswers++;
        }

        scoreTextView.setText("Рахунок: " + score);
        generateNewColor();
    }

    private int getColorByName(String colorName) {
        switch (colorName) {
            case "Червоний": return Color.RED;
            case "Зелений": return Color.GREEN;
            case "Синій": return Color.BLUE;
            case "Жовтий": return Color.YELLOW;
            case "Оранжевий": return Color.parseColor("#FFA500");
            case "Фіолетовий": return Color.MAGENTA;
            case "Рожевий": return Color.parseColor("#FFC0CB");
            case "Коричневий": return Color.parseColor("#8B4513");
            case "Сірий": return Color.GRAY;
            default: return Color.BLACK;
        }
    }

    private void showResultsDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Результат гри");
        builder.setMessage("Правильні відповіді: " + correctAnswers +
                "\nНеправильні відповіді: " + incorrectAnswers +
                "\nЗагальний рахунок: " + score);
        builder.setPositiveButton("Гаразд", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                finish();
            }
        });
        builder.setCancelable(false);
        builder.show();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (timer != null) {
            timer.cancel();
        }
    }
}
